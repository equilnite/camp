---
title: "Page 3: Programming Styles"
subtitle: "Lab 5, Page 3"
---

::: learn
In this activity, you'll learn about the difference between programming by nesting reporter blocks inside each other and programming by stacking command blocks top to bottom.
:::

### Commands Versus Reporters

<p>Before this unit, you nested blocks inside each other so that the output reported by one block became the input to another. That style of programming is known as <em>functional programming</em>, and in Snap<em>!</em>, it uses <em>reporter</em> blocks. A reporter computes a value and reports it (to you or to other blocks).<br /> <img src="/img/gossip-result.png" class="indent"/></p>

<p>In this unit, you've been stacking blocks that carry out <em>actions,</em> such as playing a note. This style of programming is called <em>imperative programming</em>. In Snap<em>!</em>, imperative programming uses <em>command</em> blocks. A command tells the computer to do something, (play a sound, draw, move, change something, etc.). Commands have <em>effects.</em><br /> <img src="/img/U2/lab01/fur-elise-snippet.png" alt="repeat (2) {
play ♪ pitch: (64) beats: (0.5)
play ♪ pitch: (63) beats: (0.5)
}
play ♪ pitch: (64) beats: (0.5)
play ♪ pitch: (59) beats: (0.5)
" class="indent"/></p>

<p>The shapes of the blocks go with the shapes of the places where you can use them. Reporters are round, and they go into round slots in a block. Commands are more rectangular, and they have a tab at the bottom that fits into the gap at the top of another command block. Snap<em>!</em> won't let you put a reporter in a stack of commands or put a command in a round slot.</p>

::: vocabFullWidth
::: sidenote
You learned about reporters in <a href="/lab-2/6-making-a-new-block.html" title="Lab 2 Page 6: Making Your Own Block">Lab 2 Page 4: Making Your Own Block</a>.
:::

<p>A <strong>reporter</strong> block does a calculation and reports the result. Reporters have an oval shape. <br /> <img src="/img/blocks/item.png" title="item () of &apos;list input slot&apos;" alt="item () of &apos;list input slot&apos;" class="indent"/> <img src="/img/blocks/join.png" title="join () ()" alt="join () ()" class="indent"/> <img src="/img/blocks/reporter-if.png" title="if &apos;predicate input slot&apos; then () else ()" alt="if &apos;predicate input slot&apos; then () else ()" class="indent"/></p>

<p>A <strong>predicate</strong> is a special kind of reporter that asks a true/false question and reports either true or false. Predicates have a hexagon shape.<br /> <img src="/img/blocks/is-a-list.png" title="What does IS () A (LIST)? do?" alt="What does IS () A (LIST)? do?" class="indent"/> <img src="/img/blocks/mouse-down-full-size.png" title="mouse down?" alt="mouse down?" class="indent"/> <img src="/img/blocks/equal.png" title="() = ()" alt="() = ()" class="indent"/></p>

<p>A <strong>command</strong> block tells the computer to do something <em>without reporting a value</em>. Commands have a puzzle shape and can be snapped together one after another. <br /> <img src="/img/blocks/set-tempo-to-60-bpm.png" title="set tempo to () bpm" alt="set tempo to () bpm" class="indent"/> <img src="/img/blocks/repeat.png" title="repeat () {}" alt="repeat () {}" class="indent"/> <img src="/img/blocks/delete-empty.png" title="delete () from &apos;list input slot&apos;" alt="delete () from &apos;list input slot&apos;" class="indent"/></p>

::: {.endnote style="clear: right;"}
Unlike reporters, a command block doesn't report anything, so you can't use its result as the input to another block---its result is an action, not a value!
:::
:::

### Creating a Command Block

<p>You've created a reporter block before. You can create a command block in almost exactly the same way.</p>

::: forYouToDo
<ol>

<img src="/img/U2/lab01/make-a-block-mystery-song-labels.png" title="image of &apos;Make a block&apos; dialog box with 10 palette menus (Motion, Looks, Sound, Pen, Other, Control, Sensing, Operators, Variables, Lists) of which Sound is selected; a text box in which &apos;mystery song&apos; has been written; three block shape options (puzzle-shaped/&apos;Command&apos;, oval/&apos;Reporter&apos;, and hexagonal/&apos;Predicate&apos;) of which &apos;Command&apos; is selected; two radio boxes (&apos;for all sprites&apos;, which is checked, and &apos;for this sprite only&apos;, which is not checked); and two buttons (&apos;OK&apos; and &apos;Cancel&apos;)" alt="image of &apos;Make a block&apos; dialog box with 10 palette menus (Motion, Looks, Sound, Pen, Other, Control, Sensing, Operators, Variables, Lists) of which Sound is selected; a text box in which &apos;mystery song&apos; has been written; three block shape options (puzzle-shaped/&apos;Command&apos;, oval/&apos;Reporter&apos;, and hexagonal/&apos;Predicate&apos;) of which &apos;Command&apos; is selected; two radio boxes (&apos;for all sprites&apos;, which is checked, and &apos;for this sprite only&apos;, which is not checked); and two buttons (&apos;OK&apos; and &apos;Cancel&apos;)" class="imageRight noshadow"/>

<li>If your project isn't open already, log in to Snap<em>!</em>, and open your "Song Player" project.</li>

<li>

Create a new command block called <code>mystery song</code>.

<ol>

<li>Right-click in an empty spot in the Scripts area and choose "make a block..." <br /> <img src="/img/1-introduction/make-a-block.jpg" title="make a block option" alt="make a block option" class="indent"/></li>

<li>Choose the palette for your block: Sound.</li>

<li>Type the title (name) for your block: <code>mystery song</code>.</li>

<li>Select the shape for your block: Command.</li>

<li>Click "OK."</li>

</ol>

</li>

</ol>

<p style="clear: both; height: 0px;">

</p>
:::

<p>When you create a reporter, the block editor opens with <img src="/img/blocks/report.png" title="report" alt="report" class="inline-block"/> attached to the hat block, and whatever input you give to <code>report</code> will be the value reported by the new reporter. When you create a command, the block editor opens with only the hat block, and the blocks attached below it will run (one at a time) when the new command is run.</p>

::: forYouToDo
<ol start="3">

::: vocab
<strong>: Abstraction</strong>

<p>Hiding away the details of how code works (such as by moving it inside a new block) is a form of <em>abstraction</em>.</p>
:::

<li>Inside the <code>mystery song</code> block, either build a new song for someone else to guess or drag in a song you have already created and attach it to the <code>mystery song</code> hat block.</li>

::: todo
Note to Mary for later: An animation of dragging in a song would be nice here. --MF, 2/9/22
:::

<li>

Play your mystery song for someone else, and see if they can guess what it is. Then guess someone else's song.

::: endnote
You can find your newly created block at the end of the Sound blocks in the sidebar, and drag it out to the scripting area.
:::

</li>

<li><img src="/img/icons/save-now.png" title="Now Is a Good Time to Save" alt="Now Is a Good Time to Save" class="inline"/></li>

</ol>

<p style="clear: both; height: 0px;">

</p>
:::

::: {.ifTime .show}
<ol start="6">

<li>Create additional command blocks with different mystery songs.</li>

</ol>
:::

::: learn
In this activity, you created a command block to store a sequence of commands.
:::
