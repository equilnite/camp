---
title: "Page 2: Keeping Score with Global Variables"
subtitle: "Lab 2, Page 2"
order: 2
---

{{< include /utilities/includes/gif.qmd >}}

::: learn
<p><strong>On this page,</strong> you will use a <em>global variable</em> to keep score in your Click Alonzo game.</p>
:::

<p>In your Number Guessing Game, you used <em>script variables</em> to store information (the value of <var>secret number</var>) that was needed by only one script. To keep score in Click Alonzo, more than one script will need access to that information, so you'll use a <em>global variable</em>.</p>

::: vocabFullWidth
: <strong>Global Variable</strong>

<p>A <strong>global variable</strong> is a variable that is usable by all scripts in the program.</p>
:::

::: endnote
<h3><strong>When are global variables needed?</strong></h3>

<p>Most of the time, script variables are a better choice because they can't be changed by some other part of the program, and so they reduce the chance of bugs. But <strong>if multiple scripts need access</strong> to a variable or <strong>if the information in that variable needs to be saved</strong> with your project, then use a global variable.</p>
:::

::: {#first .forYouToDo}
<ol>

<li>Open your L1-ClickAlonzo project, play the game, and review the code so you remember how it works.</li>

<li>Create a global variable named <var>score</var>. Here's how.</li>

::: narrower
<h3><strong>Making a Global Variable</strong></h3>

<ol type="a">

<li>Click <img src="/img/1-introduction/make-a-variable.png" title="make a variable button" alt="make a variable button" class="inline"/> in the Variables palette. (It's not a block; you can't drag it into the scripting area.)</li>

<li>Type the title for your variable. In this case, it's <var>score</var>.</li>

<li>Click "OK."</li>

</ol>
:::

<li>

Use the <var>score</var> variable to keep track of the player's score:

<ol>

<li>Initialize <var>score</var> to 0 at the beginning of the game.</li>

::: vocabFullWidth
<p>Setting the starting value of a variable is known as <strong>initializing</strong><a name="initialize" class="anchor">Â </a>the variable.</p>
:::

::: comment
AAP-1.B.1
:::

<li>Make the program <code>change</code> the score by 1 whenever the sprite is clicked.</li>


</ol>

</li>

<img src="/img/icons/pair-programming-swap.png" title="Pair Programming Swap" alt="Pair Programming Swap" class="imageRight"/>

<li><strong>Test and debug.</strong> Play the game enough to make sure that the score variable works. <img src="/img/icons/save-mini.png" title="Save your work" alt="Save your work" class="inline"/></li>

<li><img src="/img/icons/talk-with-your-partner-mini.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="inline"/> Right now, the game doesn't have a way to win, but you'll change that. Decide on the score that you will use to test whether the player has won.</li>

<li>

Use a conditional to determine when the player reaches that score. When they do:

<ol>

<li>Make Alonzo stop jumping around.</li>

<li>Make Alonzo appear again. (You'll have to reset the ghost effect.)</li>

<li>Congratulate the player for a few seconds.</li>

<!--<li>If necessary, use another <code>stop</code> block to stop the running script.  (Whether you need this will depend on your program structure.)</li>-->

</ol>

</li>

<li>

<strong>Test and debug.</strong> Take turns playing, and fix any bugs. <img src="/img/icons/save-mini.png" title="Save your work" alt="Save your work" class="inline"/><br />

::: takeNote
<h3><strong>Debugging Tip: Display of Variables</strong></h3>

<p>

When you are debugging your code, it can help to see the value of a variable at different points in your program. This is done differently for local and global variables:

<ul>

<li>Global variables have check-boxes that control the display of the variable <em>watcher</em> on the stage (shown below).<br /> <img src="/img/2-complexity/Debugging/golbal-variables-checked.png" title="Checking the global variables in the palette." alt="Checking the global variables in the palette." class="indent" height="300"/><img src="/img/2-complexity/Debugging/global-variables-displayed.png" title="Displaying the global variable on the stage" alt="Displaying the global variable on the stage" class="indent" height="300"/></li>

<li>If it's a <em>local</em> (script) variable, you can <strong>use the <code>show variable</code> block</strong> inside the script to display a watcher on the stage (and use <code>hide variable</code> to hide it again).</li>

</ul>

</p>
:::

</li>

</ol>
:::

::: ifTime
<ol start="9">

<li>If the sprite moves without being clicked, make the score go down by 1.</li>

<li>Game too hard? Increase the score by 2 for a hit. Too big a change? Increase by 3 for a hit, decrease by 2 for a miss. You can make arbitrarily fine adjustments. This process is called <em>playtuning</em> a game.</li>

</ol>
:::
